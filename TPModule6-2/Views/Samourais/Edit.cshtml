@model TPModule6_2.Models.SamouraiViewModel

@using BO
@using TPModule6_2.Helpers

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@Html.GenerateForm(
    Html.FormBaseContent("Samourai", Html.AddAttributs(typeof(Samourai), "Samourai.", Model.Samourai, false,
    new string[] { "Id" },
    new string[] { "Potentiel" },
    new List<PropertyListConstraint>()
    {
        new PropertyListConstraint()
        {
            TargetProperty = "Arme",
            NewPropertyName = "IdSelectedArme",
            IsMonoSelection = true,
            DefaultEmpty = "Aucun",
            Datas = Model.Armes.Select(x => new SelectListItem(){ Text = x.Nom, Value = x.Id.ToString() }).ToList()
        },
        new PropertyListConstraint()
        {
            TargetProperty = "ArtMartials",
            NewPropertyName = "ArtMartialsIds",
            IsMonoSelection = false,
            DefaultEmpty = "Aucun",
            Datas = Model.ArtMartials.Select(x => new SelectListItem(){ Text = x.Nom, Value = x.Id.ToString() }).ToList()
        }
    }).ToString(), "Create").ToString())

@*---------------------------
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Samourai</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Samourai.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Samourai.Force, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Samourai.Force, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Samourai.Force, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Samourai.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Samourai.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Samourai.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Samourai.Arme, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdSelectedArme, Model.Armes.Select(x => new SelectListItem { Text = x.Nom, Value = x.Id.ToString() }), "Aucune arme", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Samourai.Arme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Samourai.ArtMartials, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.ArtMartialsIds, Model.ArtMartials.Select(x => new SelectListItem { Text = x.Nom, Value = x.Id.ToString() }), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Samourai.ArtMartials, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
